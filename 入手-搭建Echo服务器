搭建Echo服务器

所有讲解网络通信编程的书籍都会最先讲解如何编写一个Echo服务器，本书也不例外。
本章将讲解如何快速编写一个基于Swoole扩展的Echo服务器。
Almost all network programming books start with teaching how to build an Echo Server. 
Well, we will do the same for this guide.
In this chapter, we will learn how to quickly build an Echo Server based on Swoole!

1、服务端 Server

创建一个Server.php文件并输入如下内容：
Create a file named 'Server.php' and type in following codes:

// Server
class Server
{
    private $serv;

    public function __construct() {
        $this->serv = new swoole_server("0.0.0.0", 9501);
        $this->serv->set(array(
            'worker_num' => 8,//设置启动的worker进程数
            'daemonize' => false,//守护进程化 daemonize => 1
        ));

        $this->serv->on('Start', array($this, 'onStart'));
        $this->serv->on('Connect', array($this, 'onConnect'));
        $this->serv->on('Receive', array($this, 'onReceive'));
        $this->serv->on('Close', array($this, 'onClose'));

        $this->serv->start();
    }

    public function onStart( $serv ) {
        echo "Start\n";
    }

    public function onConnect( $serv, $fd, $from_id ) {
        $serv->send( $fd, "Hello {$fd}!" );
    }

    public function onReceive( swoole_server $serv, $fd, $from_id, $data ) {
        echo "Get Message From Client {$fd}:{$data}\n";
        $serv->send($fd, $data);
    }

    public function onClose( $serv, $fd, $from_id ) {
        echo "Client {$fd} close connection\n";
    }
}
// 启动服务器 Start the server
$server = new Server();
